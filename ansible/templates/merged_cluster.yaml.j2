apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: Cluster
metadata:
  name: {{ cluster_name }}
spec:
  clusterNetwork:
    cniConfig:
      cilium: {}
    pods:
      cidrBlocks:
      - {{ pod_cidr | default("172.20.0.0/16") }}
    services:
      cidrBlocks:
      - {{ service_cidr | default("10.96.0.0/12") }}
  controlPlaneConfiguration:
    count: 1
    endpoint:
      host: "{{ control_plane_endpoint }}"
    machineGroupRef:
      kind: TinkerbellMachineConfig
      name: {{ cluster_name }}-cp
  datacenterRef:
    kind: TinkerbellDatacenterConfig
    name: {{ cluster_name }}
  kubernetesVersion: "{{ kubernetes_version }}"
  managementCluster:
    name: {{ cluster_name }}
  workerNodeGroupConfigurations:
  - name: {{ cluster_name }}-worker
    count: 2
    machineGroupRef:
      kind: TinkerbellMachineConfig
      name: {{ cluster_name }}-worker
---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: TinkerbellDatacenterConfig
metadata:
  name: {{ cluster_name }}
spec:
  tinkerbellIP: "{{ tinkerbell_ip }}"
  osImageURL: "http://{{ hostvars[groups['admin'][0]]['ansible_host'] }}:{{ image_server_port }}/ubuntu-2204-kube-1-33.gz"
  hookImagesURLPath: "http://{{ hostvars[groups['admin'][0]]['ansible_host'] }}:{{ image_server_port }}/hook"
  isoBoot: false
---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: TinkerbellMachineConfig
metadata:
  name: {{ cluster_name }}-cp
spec:
  hardwareSelector:
    type: cp
  osFamily: ubuntu
  templateRef:
    kind: TinkerbellTemplateConfig
    name: {{ cluster_name }}
  users:
  - name: {{ ansible_user }}
    sshAuthorizedKeys:
    - "{{ ssh_pub_key }}"
---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: TinkerbellMachineConfig
metadata:
  name: {{ cluster_name }}-worker
spec:
  hardwareSelector:
    type: worker
  osFamily: ubuntu
  templateRef:
    kind: TinkerbellTemplateConfig
    name: {{ cluster_name }}
  users:
  - name: {{ ansible_user }}
    sshAuthorizedKeys:
    - "{{ ssh_pub_key }}"
---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: TinkerbellTemplateConfig
metadata:
  name: {{ cluster_name }}
spec:
  osImageURL: "http://{{ hostvars[groups['admin'][0]]['ansible_host'] }}:{{ image_server_port }}/ubuntu-2204-kube-1-33.gz"
  template:
    name: {{ cluster_name }}-template
    tasks:
    {%- if eksa_tinkerbell_actions is defined and eksa_tinkerbell_actions %}
    {{- eksa_tinkerbell_actions | to_nice_yaml | indent(4) }}
    {%- else %}
      []
    {%- endif %}